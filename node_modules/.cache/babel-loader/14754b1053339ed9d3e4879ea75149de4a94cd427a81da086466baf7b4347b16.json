{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let input = ref(\"\");\n    const fruits = [\"apple\", \"banana\", \"orange\"];\n    function filteredList() {\n      return fruits.filter(fruit => fruit.toLowerCase().includes(input.value.toLowerCase()));\n    }\n    function fetchData() {\n      loading.value = true;\n      // I prefer to use fetch\n      // you can use use axios as an alternative\n      return fetch('http://jsonplaceholder.typicode.com/posts', {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        // a non-200 response code\n        if (!res.ok) {\n          // create error instance with HTTP status text\n          const error = new Error(res.statusText);\n          error.json = res.json();\n          throw error;\n        }\n        return res.json();\n      }).then(json => {\n        // set the response data\n        data.value = json.data;\n      }).catch(err => {\n        error.value = err;\n        // In case a custom JSON error response was provided\n        if (err.json) {\n          return err.json.then(json => {\n            // set the JSON response message\n            error.value.message = json.message;\n          });\n        }\n      }).then(() => {\n        loading.value = false;\n      });\n    }\n    const __returned__ = {\n      get input() {\n        return input;\n      },\n      set input(v) {\n        input = v;\n      },\n      fruits,\n      filteredList,\n      fetchData,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","input","fruits","filteredList","filter","fruit","toLowerCase","includes","value","fetchData","loading","fetch","method","headers","then","res","ok","error","Error","statusText","json","data","catch","err","message"],"sources":["/home/itsampis/Documents/vuejs/demoapp/src/App.vue"],"sourcesContent":["\n\n<template>\n  <input type=\"text\" v-model=\"input\" placeholder=\"Search fruits...\" />\n <div class=\"item fruit\" v-for=\"fruit in filteredList()\" :key=\"fruit\">\n   <p>{{ fruit }}</p>\n </div>\n <div class=\"item error\" v-if=\"input&&!filteredList().length\">\n    <p>No results found!</p>\n </div>\n</template>\n\n\n\n\n\n<script setup>\n\nimport { ref } from \"vue\";\n\n\nlet input = ref(\"\");\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\n\nfunction filteredList() {\n  return fruits.filter((fruit) =>\n    fruit.toLowerCase().includes(input.value.toLowerCase())\n  );\n}\n\nfunction fetchData() {\n  loading.value = true;\n  // I prefer to use fetch\n  // you can use use axios as an alternative\n  return fetch('http://jsonplaceholder.typicode.com/posts', {\n    method: 'get',\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(res => {\n      // a non-200 response code\n      if (!res.ok) {\n        // create error instance with HTTP status text\n        const error = new Error(res.statusText);\n        error.json = res.json();\n        throw error;\n      }\n\n      return res.json();\n    })\n    .then(json => {\n      // set the response data\n      data.value = json.data;\n    })\n    .catch(err => {\n      error.value = err;\n      // In case a custom JSON error response was provided\n      if (err.json) {\n        return err.json.then(json => {\n          // set the JSON response message\n          error.value.message = json.message;\n        });\n      }\n    })\n    .then(() => {\n      loading.value = false;\n    });\n}\n\n\n\n</script>\n\n<style>@import './css/style.css';</style>\n\n\n\n\n\n\n\n\n<!-- <template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  } -->\n<!-- }\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style> --> -->\n"],"mappings":"AAkBA,SAASA,GAAG,QAAQ,KAAK;;;;;;;IAGzB,IAAIC,KAAK,GAAGD,GAAG,CAAC,EAAE,CAAC;IACnB,MAAME,MAAM,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAG5C,SAASC,YAAYA,CAAA,EAAG;MACtB,OAAOD,MAAM,CAACE,MAAM,CAAEC,KAAK,IACzBA,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,KAAK,CAACO,KAAK,CAACF,WAAW,EAAE,CAAC,CACxD;IACH;IAEA,SAASG,SAASA,CAAA,EAAG;MACnBC,OAAO,CAACF,KAAK,GAAG,IAAI;MACpB;MACA;MACA,OAAOG,KAAK,CAAC,2CAA2C,EAAE;QACxDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAI;QACX;QACA,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACX;UACA,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACH,GAAG,CAACI,UAAU,CAAC;UACvCF,KAAK,CAACG,IAAI,GAAGL,GAAG,CAACK,IAAI,EAAE;UACvB,MAAMH,KAAK;QACb;QAEA,OAAOF,GAAG,CAACK,IAAI,EAAE;MACnB,CAAC,CAAC,CACDN,IAAI,CAACM,IAAI,IAAI;QACZ;QACAC,IAAI,CAACb,KAAK,GAAGY,IAAI,CAACC,IAAI;MACxB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZN,KAAK,CAACT,KAAK,GAAGe,GAAG;QACjB;QACA,IAAIA,GAAG,CAACH,IAAI,EAAE;UACZ,OAAOG,GAAG,CAACH,IAAI,CAACN,IAAI,CAACM,IAAI,IAAI;YAC3B;YACAH,KAAK,CAACT,KAAK,CAACgB,OAAO,GAAGJ,IAAI,CAACI,OAAO;UACpC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,CACDV,IAAI,CAAC,MAAM;QACVJ,OAAO,CAACF,KAAK,GAAG,KAAK;MACvB,CAAC,CAAC;IACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}