{"ast":null,"code":"import { vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vShow as _vShow, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-group\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"country-code\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"item error\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"No results found!\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_cityDetails = _resolveComponent(\"cityDetails\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"search\",\n    class: \"form-control rounded\",\n    placeholder: \"Search the city...\",\n    \"aria-label\": \"Search\",\n    \"aria-describedby\": \"search-addon\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.searchCity && $options.searchCity(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.city]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-outline-primary\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.searchCity && $options.searchCity(...args))\n  }, \"Search\")], 512 /* NEED_PATCH */), [[_vShow, !$data.isModalVisible]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityList, city => {\n    return _openBlock(), _createElementBlock(\"table\", {\n      id: \"list-view\",\n      key: city\n    }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", {\n      onClick: $event => $options.clickCity(city)\n    }, [_createTextVNode(_toDisplayString(city.name) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(city.state) + \" (\" + _toDisplayString(city.country) + \")\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _ctx.input && !_ctx.filteredList().length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createVNode(_component_cityDetails, {\n    cityTitle: $data.cityTitle,\n    weatherDetails: _ctx.weatherDetails,\n    weatherDetailsIcon: _ctx.weatherDetailsIcon,\n    tmp: _ctx.tmp,\n    feels_like: _ctx.feels_like,\n    temp_min: _ctx.temp_min,\n    temp_max: _ctx.temp_max,\n    pressure: _ctx.pressure,\n    sea_level: _ctx.sea_level,\n    grnd_level: _ctx.grnd_level,\n    humidity: _ctx.humidity,\n    temp_kf: _ctx.temp_kf,\n    onClose: $options.closeModal\n  }, null, 8 /* PROPS */, [\"cityTitle\", \"weatherDetails\", \"weatherDetailsIcon\", \"tmp\", \"feels_like\", \"temp_min\", \"temp_max\", \"pressure\", \"sea_level\", \"grnd_level\", \"humidity\", \"temp_kf\", \"onClose\"]), [[_vShow, $data.isModalVisible]])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_5","id","_hoisted_1","type","placeholder","$data","city","$event","onKeyup","_cache","_withKeys","args","$options","searchCity","onClick","isModalVisible","_createElementBlock","_Fragment","_renderList","cityList","key","clickCity","name","_hoisted_3","_toDisplayString","state","country","_ctx","input","filteredList","length","_hoisted_4","_hoisted_6","_hoisted_7","_createVNode","_component_cityDetails","cityTitle","weatherDetails","weatherDetailsIcon","tmp","feels_like","temp_min","temp_max","pressure","sea_level","grnd_level","humidity","temp_kf","onClose","closeModal"],"sources":["/home/itsampis/Documents/vuejs/demoapp/src/App.vue"],"sourcesContent":["\n\n<template>\n\n\n<div class=\"input-group\" v-show =\"!isModalVisible\">\n  <input type=\"search\" class=\"form-control rounded\"\n          placeholder=\"Search the city...\" aria-label=\"Search\" \n          aria-describedby=\"search-addon\" v-model=\"city\" @keyup.enter=\"searchCity\"/>\n  <button type=\"button\" class=\"btn btn-outline-primary\" @click =\"searchCity\">Search</button>\n</div>\n\n<table id=\"list-view\" v-for=\"city in cityList\" :key=\"city\">\n  <tr>\n    <td @click =\"clickCity(city)\">{{city.name}} <span class=\"country-code\">{{city.state}} ({{city.country}})</span></td>\n  </tr>\n</table>\n  \n\n <div class=\"item error\" v-if=\"input&&!filteredList().length\">\n    <p>No results found!</p>\n </div>\n\n\n<div id=\"app\">\n\n  <cityDetails\n    :cityTitle = \"cityTitle\"\n    :weatherDetails = \"weatherDetails\"\n    :weatherDetailsIcon = \"weatherDetailsIcon\"\n    :tmp = \"tmp\"\n    :feels_like = \"feels_like\"\n    :temp_min = \"temp_min\"\n    :temp_max = \"temp_max\"\n    :pressure = \"pressure\"\n    :sea_level = \"sea_level\"\n    :grnd_level = \"grnd_level\"\n    :humidity = \"humidity\"\n    :temp_kf = \"temp_kf\"\n    v-show =\"isModalVisible\"\n    @close=\"closeModal\"\n  />\n</div>\n</template>\n\n\n\n<script>\n\nimport axios from \"axios\";\n<style>@import './css/style.css';</style>\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport cityDetails from './components/cityDetails.vue';\n\n\nexport default {\n    components: {\n      cityDetails,\n  },\n  data(){\n    return {\n      city:'',\n      cityList:[],\n      isModalVisible: false,\n      cityTitle: ''\n    }\n\n  },\n\n  created (){\n    console.log('Created');\n    console.log(this.findTheWord([\"G>W\",\"W>F\"]));\n    console.log(this.findTheWord([\"E>R\",\"R>S\",\"S>O\",\"O>N\",\"P>E\"]));\n    console.log(this.findTheWord([\"A>B\",\"Z>A\",\"F>O\"]));\n    //this.getcityList(['Test1', 'Test2']);\n    /*console.log (this.arrayOps([[1,2,3,4,5], [1,2,3,4,5]]));\n    console.log (\"Silent, Listen: \" + this.isAnagram(\"Silent\", \"Listen\"));\n    console.log (\"abc, cba: \" + this.isAnagram(\"abc\", \"cba\"));\n    console.log (\"xxyy, yyxx: \" + this.isAnagram(\"xxyy\", \"yyxx\"));\n    console.log (\"ad, dv: \" + this.isAnagram(\"ad\", \"dv\"));*/\n    //this.callApi('http://api.openweathermap.org/data/2.5/forecast?id=524901&appid=8a81160d794a7c7ff46372e14aef240f');\n\n  },\n\n  methods: {\n    \n    showModal() {\n        this.isModalVisible = true;\n    },\n    closeModal() {\n        this.isModalVisible = false;\n    },\n\n    searchCity(){\n      console.log(\"Search City called with \" + this.city);\n      this.apiCallList('http://api.openweathermap.org/geo/1.0/direct?q='+ this.city + '&limit=10&appid=8a81160d794a7c7ff46372e14aef240f');\n\n    },\n\n    clickCity(city){\n      console.log(\"clickCity called with \" + city);\n      //this.apiCallList('http://api.openweathermap.org/geo/1.0/direct?q='+ city.name +','+ city.state + ',' + city.country + '&limit=10&appid=8a81160d794a7c7ff46372e14aef240f');\n      this.apiCallCity('http://api.openweathermap.org/data/2.5/forecast?lat='+ city.lat +'&lon='+ city.lon +'&appid=8a81160d794a7c7ff46372e14aef240f', city.name );\n\n    },\n\n\n    getcityList(results){\n      this.cityList = results;\n    },\n\n\n    apiCallCity(link, city_name) {\n      console.log(\"apiCallCitycalled with \" + link);\n      try {\n        axios.get(link)\n        .then(function (response) {\n          //console.log (response);\n          //console.log (JSON.stringify(response));\n\n          this.tmp = response.data.list[0].main.temp;\n          this.feels_like = response.data.list[0].main.feels_like; \n          this.temp_min = response.data.list[0].main.temp_min; \n          this.temp_max = response.data.list[0].main.temp_max;\n          this.pressure = response.data.list[0].main.pressure;\n          this.sea_level = response.data.list[0].main.sea_level;\n          this.grnd_level = response.data.list[0].main.grnd_level;\n          this.humidity = response.data.list[0].main.humidity;\n          this.temp_kf = response.data.list[0].main.temp_kf;                 \n\n\n          this.weatherDetails = response.data.list[1].weather[0].main;\n          this.weatherDetailsIcon = \"http://openweathermap.org/img/w/\" + response.data.list[1].weather[0].icon + \".png\";\n          \n          this.cityTitle = city_name;\n          this.showModal();\n\n        }.bind(this));\n      }\n      catch (err) {\n        console.log(\"error: \" + err);\n      }\n    },\n\n    apiCallList(link) {\n      const result = [];\n      try {\n        axios.get(link)\n        .then(function (response) {\n          console.log (response);\n          console.log (JSON.stringify(response));\n          console.log (\"response.data length \" + response.data.length);\n\n          for (var i=0;i < response.data.length; i++){\n            result.push({name: response.data[i].name,country: response.data[i].country, state: response.data[i].state, lat: response.data[i].lat, lon: response.data[i].lon } );\n          }\n\n          console.log(result);\n          this.getcityList(result);\n        }.bind(this));\n      }\n      catch (err) {\n        console.log(\"error: \" + err);\n      }\n    },\n\n\n    arrayOps(arr) {\n      const result = [];\n      const numRows = arr.length;\n      const numCols = arr[0].length;\n      \n      for (let i = 0; i < numCols; i++) {\n        let sum = 0;\n        for (let j = 0; j < numRows; j++) {\n          sum += arr[j][i];\n        }\n        result.push(sum);\n      }\n      \n      for (let i = 0; i < numRows; i++) {\n        let sum = 0;\n        for (let j = 0; j < numCols; j++) {\n          sum += arr[i][j];\n        }\n        result.push(sum);\n      }\n      \n      return result;\n    },\n\n    isAnagram(s1, s2) {\n      const st1 = s1.toLowerCase().replace(/[^\\w]/g, '');\n      const st2 = s2.toLowerCase().replace(/[^\\w]/g, '');\n\n      const new_st1 = st1.split('').sort().join('');\n      const new_st2 = st2.split('').sort().join('');\n\n      return new_st1 === new_st2;\n    },\n\n    /*\n      Let us define a precedence string as follows:\n      \"F>E\" means that in the word, the letter \"F\" comes before the letter \"E\".\n\n      The objective of this test is to implement the find_the_word function.\n      When passed a list of precedences, the function will return the word associated to the input.\n      There are no duplicate letters in the word.\n\n      For example:\n      ------------\n\n      findTheWord([\"G>W\",\"W>F\"]) should return GWF\n      findTheWord([\"E>R\",\"R>S\",\"S>O\",\"O>N\",\"P>E\"]) should return PERSON\n\n      */\n\n      findTheWord(letters) {\n        const graph = {};\n        const visited = {};\n        let output = \"\";\n\n        // Build the graph\n        for (const letter of letters) {\n          const [parent, child] = letter.split(\">\");\n          if (!graph[parent]) graph[parent] = [];\n          graph[parent].push(child);\n          visited[child] = false;\n        }\n\n        // Topological sort\n        const dfs = (node) => {\n          visited[node] = true;\n          if (graph[node]) {\n            for (const child of graph[node]) {\n              if (!visited[child]) dfs(child);\n            }\n          }\n          output = node + output;\n        };\n\n        for (const node in graph) {\n          if (!visited[node]) dfs(node);\n        }\n\n        return output;\n      }\n\n\n\n  }\n\n}\n</script>\n\n<style>@import './css/style.css';</style>\n\n\n"],"mappings":";;EAKKA,KAAK,EAAC;AAAa;;;EAS8BA,KAAK,EAAC;AAAc;;;EAKpEA,KAAK,EAAC;;gCACRC,mBAAA,CAAwB,WAArB,mBAAiB;oBAApBC,UAAwB,C;;EAIvBC,EAAE,EAAC;AAAK;;;6EAnBbF,mBAAA,CAKM,OALNG,UAKM,G,gBAJJH,mBAAA,CAEkF;IAF3EI,IAAI,EAAC,QAAQ;IAACL,KAAK,EAAC,sBAAsB;IACzCM,WAAW,EAAC,oBAAoB;IAAC,YAAU,EAAC,QAAQ;IACpD,kBAAgB,EAAC,cAAc;+DAAUC,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;iEAA9BN,KAAA,CAAAC,IAAI,E,GACrDP,mBAAA,CAA0F;IAAlFI,IAAI,EAAC,QAAQ;IAACL,KAAK,EAAC,yBAAyB;IAAEgB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAGC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,QAAM,E,oCAJhDN,KAAA,CAAAU,cAAc,E,sBAOjDC,mBAAA,CAIQC,SAAA,QAAAC,WAAA,CAJ6Bb,KAAA,CAAAc,QAAQ,EAAhBb,IAAI;yBAAjCU,mBAAA,CAIQ;MAJDf,EAAE,EAAC,WAAW;MAA2BmB,GAAG,EAAEd;QACnDP,mBAAA,CAEK,aADHA,mBAAA,CAAoH;MAA/Ge,OAAK,EAAAP,MAAA,IAAGK,QAAA,CAAAS,SAAS,CAACf,IAAI;0CAAKA,IAAI,CAACgB,IAAI,IAAE,GAAC,iBAAAvB,mBAAA,CAAmE,QAAnEwB,UAAmE,EAAAC,gBAAA,CAAtClB,IAAI,CAACmB,KAAK,IAAE,IAAE,GAAAD,gBAAA,CAAElB,IAAI,CAACoB,OAAO,IAAE,GAAC,gB;kCAK7EC,IAAA,CAAAC,KAAK,KAAGD,IAAA,CAAAE,YAAY,GAAGC,MAAM,I,cAA3Dd,mBAAA,CAEM,OAFNe,UAEM,EAAAC,UAAA,K,mCAGPjC,mBAAA,CAkBM,OAlBNkC,UAkBM,G,gBAhBJC,YAAA,CAeEC,sBAAA;IAdCC,SAAS,EAAI/B,KAAA,CAAA+B,SAAS;IACtBC,cAAc,EAAIV,IAAA,CAAAU,cAAc;IAChCC,kBAAkB,EAAIX,IAAA,CAAAW,kBAAkB;IACxCC,GAAG,EAAIZ,IAAA,CAAAY,GAAG;IACVC,UAAU,EAAIb,IAAA,CAAAa,UAAU;IACxBC,QAAQ,EAAId,IAAA,CAAAc,QAAQ;IACpBC,QAAQ,EAAIf,IAAA,CAAAe,QAAQ;IACpBC,QAAQ,EAAIhB,IAAA,CAAAgB,QAAQ;IACpBC,SAAS,EAAIjB,IAAA,CAAAiB,SAAS;IACtBC,UAAU,EAAIlB,IAAA,CAAAkB,UAAU;IACxBC,QAAQ,EAAInB,IAAA,CAAAmB,QAAQ;IACpBC,OAAO,EAAIpB,IAAA,CAAAoB,OAAO;IAElBC,OAAK,EAAEpC,QAAA,CAAAqC;kNADC5C,KAAA,CAAAU,cAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}