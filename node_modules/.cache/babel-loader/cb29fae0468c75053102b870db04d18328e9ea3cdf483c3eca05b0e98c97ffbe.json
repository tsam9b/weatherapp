{"ast":null,"code":"import { ref, computed } from \"vue\";\nexport default {\n  name: 'Posts',\n  props: {},\n  setup() {\n    const data = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n    function fetchData() {\n      loading.value = true;\n      // I prefer to use fetch\n      // you can use use axios as an alternative\n      return fetch('http://jsonplaceholder.typicode.com/posts', {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        // a non-200 response code\n        if (!res.ok) {\n          // create error instance with HTTP status text\n          const error = new Error(res.statusText);\n          error.json = res.json();\n          throw error;\n        }\n        return res.json();\n      }).then(json => {\n        // set the response data\n        data.value = json.data;\n      }).catch(err => {\n        error.value = err;\n        // In case a custom JSON error response was provided\n        if (err.json) {\n          return err.json.then(json => {\n            // set the JSON response message\n            error.value.message = json.message;\n          });\n        }\n      }).then(() => {\n        loading.value = false;\n      });\n    }\n    onMounted(() => {\n      fetchData();\n    });\n    return {\n      data,\n      loading,\n      error\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","name","props","setup","data","loading","error","fetchData","value","fetch","method","headers","then","res","ok","Error","statusText","json","catch","err","message","onMounted"],"sources":["/home/itsampis/Documents/vuejs/demoapp/src/components/Posts.vue"],"sourcesContent":["<template>\n  <ul v-if=\"!loading && data && data.length\">\n    <li v-for=\"post of data\">\n      <p><strong></strong></p>\n      <p></p>\n    </li>\n  </ul>\n\n  <p v-if=\"loading\">\n   Still loading..\n  </p>\n  <p v-if=\"error\">\n\n\n  </p>\n</template>\n\n<script>\nimport { ref, computed } from \"vue\";\nexport default {\n  name: 'Posts',\n  props: {\n  },\n  setup() {\n    const data = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n\n    function fetchData() {\n        loading.value = true;\n        // I prefer to use fetch\n        // you can use use axios as an alternative\n        return fetch('http://jsonplaceholder.typicode.com/posts', {\n            method: 'get',\n            headers: {\n            'content-type': 'application/json'\n            }\n        })\n            .then(res => {\n            // a non-200 response code\n            if (!res.ok) {\n                // create error instance with HTTP status text\n                const error = new Error(res.statusText);\n                error.json = res.json();\n                throw error;\n            }\n\n            return res.json();\n            })\n            .then(json => {\n            // set the response data\n            data.value = json.data;\n            })\n            .catch(err => {\n            error.value = err;\n            // In case a custom JSON error response was provided\n            if (err.json) {\n                return err.json.then(json => {\n                // set the JSON response message\n                error.value.message = json.message;\n                });\n            }\n            })\n            .then(() => {\n            loading.value = false;\n            });\n    }\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    return {\n      data,\n      loading,\n      error\n    };\n  }\n}\n</script>"],"mappings":"AAkBA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,CACP,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIL,GAAG,CAAC,IAAI,CAAC;IACtB,MAAMM,OAAM,GAAIN,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMO,KAAI,GAAIP,GAAG,CAAC,IAAI,CAAC;IAEvB,SAASQ,SAASA,CAAA,EAAG;MACjBF,OAAO,CAACG,KAAI,GAAI,IAAI;MACpB;MACA;MACA,OAAOC,KAAK,CAAC,2CAA2C,EAAE;QACtDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACT,cAAc,EAAE;QAChB;MACJ,CAAC,EACIC,IAAI,CAACC,GAAE,IAAK;QACb;QACA,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACT;UACA,MAAMR,KAAI,GAAI,IAAIS,KAAK,CAACF,GAAG,CAACG,UAAU,CAAC;UACvCV,KAAK,CAACW,IAAG,GAAIJ,GAAG,CAACI,IAAI,EAAE;UACvB,MAAMX,KAAK;QACf;QAEA,OAAOO,GAAG,CAACI,IAAI,EAAE;MACjB,CAAC,EACAL,IAAI,CAACK,IAAG,IAAK;QACd;QACAb,IAAI,CAACI,KAAI,GAAIS,IAAI,CAACb,IAAI;MACtB,CAAC,EACAc,KAAK,CAACC,GAAE,IAAK;QACdb,KAAK,CAACE,KAAI,GAAIW,GAAG;QACjB;QACA,IAAIA,GAAG,CAACF,IAAI,EAAE;UACV,OAAOE,GAAG,CAACF,IAAI,CAACL,IAAI,CAACK,IAAG,IAAK;YAC7B;YACAX,KAAK,CAACE,KAAK,CAACY,OAAM,GAAIH,IAAI,CAACG,OAAO;UAClC,CAAC,CAAC;QACN;MACA,CAAC,EACAR,IAAI,CAAC,MAAM;QACZP,OAAO,CAACG,KAAI,GAAI,KAAK;MACrB,CAAC,CAAC;IACV;IAEAa,SAAS,CAAC,MAAM;MACdd,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,OAAO;MACLH,IAAI;MACJC,OAAO;MACPC;IACF,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}